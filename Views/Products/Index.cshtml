@model BabyStore.ViewModels.ProductIndexViewModel
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
}

<h2>Productos</h2>

<p class="text-info">
     @(String.IsNullOrWhiteSpace(Model.Search) ? "Mostrando" : "Usted busco " + Model.Search + " Encontrados") <span class="badge">@Model.Products.TotalItemCount</span>producto(s)
</p>

<p>
  
    @Html.ActionLink("Create new", "Create",null, new { @class = "btn btn-primary btn btn-sm" })

    @using (Html.BeginRouteForm("ProductsIndex",FormMethod.Get))
    {
        <label>Filtrar por categoria:</label>
        @Html.DropDownListFor(vm => vm.Category, Model.CatFilterItems, "All")
        <label>Ordenar por:</label>
        @Html.DropDownListFor(vm => vm.SortBy, new SelectList(Model.Sorts, "Value", "Key"), "Default")


        <input class="btn btn-info btn-sm" type="submit" value="Filtrar" /> @*manda un search al url y este Filtra *@

        <input type="hidden" name="Search" id="Search" value="@Model.Search" />
    }
</p>
<table class="table table-striped table-hover">
    <tr>
        <th></th>
        <th>
            @Html.DisplayNameFor(model => model.Category)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Products.First().Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Products.First().Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Products.First().Price)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model.Products) {
<tr>
    <td>
        @if (item.ProductImageMappings != null && item.ProductImageMappings.Any())
        {
            <a href="@Url.Action("Details", new { id = item.ID})">
                <img src="@(Url.Content(Constants.ProductImagePath) + item.ProductImageMappings.OrderBy(pim => pim.ImageNumber).ElementAt(0).ProductImage.FileName)">
            </a>
        }
    </td>
        <td class="active">
            @Html.DisplayFor(modelItem => item.Category.Name)
        </td>
        <td class="active">
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td class="active">
            @Html.DisplayFor(modelItem => item.Description)
        </td>
        <td class="active">
            @Html.DisplayFor(modelItem => item.Price)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id = item.ID }, new { @class = "btn btn-default btn-sm" })
            @Html.ActionLink("Details", "Details", new { id = item.ID }, new { @class = "btn btn-info btn-sm" })
            @Html.ActionLink("Delete", "Delete", new { id = item.ID }, new { @class = "btn btn-danger btn-sm" })
        </td>
    </tr>
}

</table>

<div>
    Page @(Model.Products.PageCount < Model.Products.PageNumber ? 0 : Model.Products.PageNumber) of @Model.Products.PageCount
    @Html.PagedListPager(Model.Products, page => Url.Action("Index",
    new
    {
        category = @Model.Category,
        Search = @Model.Search,
        sortBy = @Model.SortBy,
        page
    }))
</div>
